# vim:nowrap:
#####################################
# Fonts
# [Nerd Fonts](https://www.nerdfonts.com)
# [Programming Fonts](https://www.programmingfonts.org)

# [Command Line](https://www.reddit.com/r/commandline/)
# [A list of new(ish) command line tools](https://jvns.ca/blog/2022/04/12/a-list-of-new-ish--command-line-tools/)



function extend_bashrc {
   cat >> $HOME/.bashrc <<EOL


# User specific aliases and functions
[[ -e ~/.alias ]] && . ~/.alias || true
[[ -e ~/.bashrc.common ]] && . ~/.bashrc.common || true
[[ -e ~/.bashrc.specific ]] && . ~/.bashrc.specific || true
[[ -d ~/.bash_completion.d ]] && for f in ~/.bash_completion.d/*; do [[ -f "\$f" ]] && source \$f; done || true
EOL
}



function install_configs {
   local -ar configs=(
     alias
     bashrc.common
     gdbinit
     gitconfig
     gitignore_global
     gotz.config.json
     inputrc
     screenrc
     tmux.conf
     toprc
     vimrc
   )

   for config in ${configs[@]}; do
      ln -fns ~/config/$config  ~/.$config
   done

   mkdir -p ~/.config/htop
   ln -fns ~/config/config/htop/htoprc ~/.config/htop/

   ln -fns ~/config/flake8 ~/.config/flake8

   mkdir -p ~/.cargo
   ln -fns ~/config/cargo.config.toml ~/.cargo/config.toml

   mkdir -p ~/.local/bin
   cp ~/config/bin/ipynb_drop_output.py ~/.local/bin/
}



# On trixie, do:
# module load StdEnv/2020
# module load rust

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
   install_configs
   extend_bashrc
fi
